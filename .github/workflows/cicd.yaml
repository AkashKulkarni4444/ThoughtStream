name: Deploy thought-stream application

on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest
    steps: 
      - name: Checkout Source
        uses: actions/checkout@v4

      - name: Create .env file
        env: 
          DATABASE_URL: ${{ secrets.DATABASE_URL }}
          NEXT_PUBLIC_SUPABASE_URL: ${{ secrets.NEXT_PUBLIC_SUPABASE_URL }}
          NEXT_PUBLIC_SUPABASE_ANON_KEY: ${{ secrets.NEXT_PUBLIC_SUPABASE_ANON_KEY }}
          SERVICE_ROLE_KEY: ${{ secrets.SERVICE_ROLE_KEY }}
          PW: ${{ secrets.PW }}
          NEXT_PUBLIC_SITE_URL: ${{ secrets.NEXT_PUBLIC_SITE_URL }}
          NEXT_PUBLIC_STRIPE_PUBLISHABLE_KEY: ${{ secrets.NEXT_PUBLIC_STRIPE_PUBLISHABLE_KEY }}
          STRIPE_SECRET_KEY: ${{ secrets.STRIPE_SECRET_KEY }}
          STRIPE_WEBHOOK_SECRET: ${{ secrets.STRIPE_WEBHOOK_SECRET }}
          THOUGHT_STREAM_DB_PWD: ${{ secrets.THOUGHT_STREAM_DB_PWD }}
        run: |
          echo "DATABASE_URL=${DATABASE_URL}" >> .env
          echo "NEXT_PUBLIC_SUPABASE_URL=${NEXT_PUBLIC_SUPABASE_URL}" >> .env
          echo "NEXT_PUBLIC_SUPABASE_ANON_KEY=${NEXT_PUBLIC_SUPABASE_ANON_KEY}" >> .env
          echo "SERVICE_ROLE_KEY=${SERVICE_ROLE_KEY}" >> .env
          echo "PW=${PW}" >> .env
          echo "NEXT_PUBLIC_SITE_URL=${NEXT_PUBLIC_SITE_URL}" >> .env
          echo "NEXT_PUBLIC_STRIPE_PUBLISHABLE_KEY=${NEXT_PUBLIC_STRIPE_PUBLISHABLE_KEY}" >> .env
          echo "STRIPE_SECRET_KEY=${STRIPE_SECRET_KEY}" >> .env
          echo "STRIPE_WEBHOOK_SECRET=${STRIPE_WEBHOOK_SECRET}" >> .env
          echo "THOUGHT_STREAM_DB_PWD=${THOUGHT_STREAM_DB_PWD}" >> .env

      - name: Build docker image
        env: 
          DATABASE_URL: ${{ secrets.DATABASE_URL }}
          NEXT_PUBLIC_SUPABASE_URL: ${{ secrets.NEXT_PUBLIC_SUPABASE_URL }}
          NEXT_PUBLIC_SUPABASE_ANON_KEY: ${{ secrets.NEXT_PUBLIC_SUPABASE_ANON_KEY }}
          SERVICE_ROLE_KEY: ${{ secrets.SERVICE_ROLE_KEY }}
          PW: ${{ secrets.PW }}
          NEXT_PUBLIC_SITE_URL: ${{ secrets.NEXT_PUBLIC_SITE_URL }}
          NEXT_PUBLIC_STRIPE_PUBLISHABLE_KEY: ${{ secrets.NEXT_PUBLIC_STRIPE_PUBLISHABLE_KEY }}
          STRIPE_SECRET_KEY: ${{ secrets.STRIPE_SECRET_KEY }}
          STRIPE_WEBHOOK_SECRET: ${{ secrets.STRIPE_WEBHOOK_SECRET }}
          THOUGHT_STREAM_DB_PWD: ${{ secrets.THOUGHT_STREAM_DB_PWD }}
        run: |
          docker build \
            -t akashkulkarni4444/thought-stream \
            --build-arg DATABASE_URL=${DATABASE_URL} \
            --build-arg NEXT_PUBLIC_SUPABASE_URL=${NEXT_PUBLIC_SUPABASE_URL} \
            --build-arg NEXT_PUBLIC_SUPABASE_ANON_KEY=${NEXT_PUBLIC_SUPABASE_ANON_KEY} \
            --build-arg SERVICE_ROLE_KEY=${SERVICE_ROLE_KEY} \
            --build-arg PW=${PW} \
            --build-arg NEXT_PUBLIC_SITE_URL=${NEXT_PUBLIC_SITE_URL} \
            --build-arg NEXT_PUBLIC_STRIPE_PUBLISHABLE_KEY=${NEXT_PUBLIC_STRIPE_PUBLISHABLE_KEY} \
            --build-arg STRIPE_SECRET_KEY=${STRIPE_SECRET_KEY} \
            --build-arg STRIPE_WEBHOOK_SECRET=${STRIPE_WEBHOOK_SECRET} \
            --build-arg THOUGHT_STREAM_DB_PWD=${THOUGHT_STREAM_DB_PWD} \
            .
          
      - name: Login to docker hub
        run: docker login -u ${{ secrets.DOCKER_USERNAME }} -p ${{ secrets.DOCKER_PASSWORD }}
      
      - name: Publish image to docker hub
        run: docker push akashkulkarni4444/thought-stream:latest

  deploy:
    needs: build
    runs-on: self-hosted
    steps:
      - name: Pull image from docker hub
        run: docker pull akashkulkarni4444/thought-stream:latest
      
      - name: Delete old container if it exists
        run: |
          if [ $(docker ps -a -q -f name=thought-stream-container) ]; then
            docker rm -f thought-stream-container
          else
            echo "Container 'thought-stream-container' does not exist."
          fi
      
      - name: Run docker container
        run: docker run -d -p 3000:3000 --name thought-stream-container akashkulkarni4444/thought-stream

        